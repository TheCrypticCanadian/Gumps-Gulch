/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object001_Nariz_0: THREE.Mesh;
    Object_10: THREE.SkinnedMesh;
    Object_7: THREE.SkinnedMesh;
    Object_9: THREE.SkinnedMesh;
    Object002_Dientes_0: THREE.Mesh;
    _rootJoint: THREE.Bone;
  };
  materials: {
    ["Nariz.001"]: THREE.MeshStandardMaterial;
    ["Ojos.001"]: THREE.MeshStandardMaterial;
    ["LEngua.001"]: THREE.MeshStandardMaterial;
    ["Spinner.001"]: THREE.MeshStandardMaterial;
    ["Dientes.001"]: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Circle001|Take 001|BaseLayer" | "Take 001";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function LiveSpinner(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/3d/LiveSpinner.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={3.447}
        >
          <group
            name="e73d43871309415392be950d2b067cbafbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="Object_4" scale={0.01}>
                  <group name="Object001" rotation={[-Math.PI / 2, 0, 0]}>
                    <mesh
                      name="Object001_Nariz_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Object001_Nariz_0.geometry}
                      material={materials["Nariz.001"]}
                    />
                  </group>
                  <group name="Object003" rotation={[-Math.PI / 2, 0, 0]} />
                  <skinnedMesh
                    name="Object_10"
                    geometry={nodes.Object_10.geometry}
                    material={materials["Ojos.001"]}
                    skeleton={nodes.Object_10.skeleton}
                  />
                  <group name="Object_6" rotation={[-Math.PI / 2, 0, 0]} />
                  <skinnedMesh
                    name="Object_7"
                    geometry={nodes.Object_7.geometry}
                    material={materials["LEngua.001"]}
                    skeleton={nodes.Object_7.skeleton}
                  />
                  <group name="Object_8" rotation={[-Math.PI / 2, 0, 0]} />
                  <skinnedMesh
                    name="Object_9"
                    geometry={nodes.Object_9.geometry}
                    material={materials["Spinner.001"]}
                    skeleton={nodes.Object_9.skeleton}
                  />
                  <primitive object={nodes._rootJoint} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/3d/LiveSpinner.glb");

